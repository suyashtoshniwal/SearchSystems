@model SearchSystems.ViewModels.EmployeeDashboardVM

@{
    ViewBag.Title = "Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Dashboard</h2>
@using (Html.BeginForm())
{
    <script type="text/javascript" src="https://www.google.com/jsapi"></script>


    <script>
        $(document).ready(function () {
            //Load Data Here
            var chartData = null;
            $.ajax({
                url: '/Dashboard/GetEmployeeJoiningData',
                type: 'GET',
                dataType: 'json',
                data: '',
                success: function (d) {
                    chartData = d;
                },
                error: function () {
                    alert('Error!');
                }
            }).done(function () {
                drawColumnChart(chartData);
            });
        });
        function drawColumnChart(d) {
            var chartData = d;
            var data = null;
            data = google.visualization.arrayToDataTable(chartData);
            var view = new google.visualization.DataView(data);
            view.setColumns([0, {
                type: 'number',
                label: data.getColumnLabel(0),
                calc: function () { return 0; }
            }
            ]);
            var chart = new google.visualization.ColumnChart($('#employeeColumnChart')[0]); //returns a HTML DOM Object
            var options = {
                title: 'Employee Joining Report',
                legend: 'none',
                colors: ['blue', '#009900'],

                hAxis: {
                    title: 'Year',
                    format: '#',
                    viewWindow: {
                        min: 1980,
                        max: 2500
                    }
                },
                vAxis: {
                    minValue: 0,
                    maxValue: 100,
                    title: 'EmployeesJoined'
                },
                chartArea: {
                    left: 100, top: 50, width: '70%', height: '50%'
                },
                animation: {
                    duration: 1000
                },
            };
            var runFirstTime = google.visualization.events.addListener(chart, 'ready', function () {
                google.visualization.events.removeListener(runFirstTime);
                chart.draw(data, options);
            });
            chart.draw(data, options);
        }
        google.load('visualization', '1', { packages: ['corechart'] });
    </script>


    <table class="table">
        <tr>
            <th>
                @Html.Label("Total Employees : ")@Html.ActionLink(Model.TotalEmployeesNumber.ToString(), "Index", "home")
            </th>
            <th>
                <div class="form-group">
                    @Html.LabelFor(model => model.TotalMaleEmployeesNumber, "Male:", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DisplayFor(model => model.TotalMaleEmployeesNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TotalMaleEmployeesNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
            </th>
            <th>
                <div class="form-group">
                    @Html.LabelFor(model => model.TotalFemaleEmployeesNumber, "Female:", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DisplayFor(model => model.TotalFemaleEmployeesNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TotalFemaleEmployeesNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
            </th>
        </tr>
    </table>
    <hr />
    @Html.Label("Pending Dues : Need to take Action")
    <table>
        <tr>
            <td>
                <div class="form-group">
                    @Html.ActionLink(Model.EmpServiceCount.ToString(), "Index", "home")
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="form-group">
                    @Html.ActionLink("Provident Fund(PF) :", "Index", "home", new { pfview = true }, null)
            </div>
                    </td>
        </tr>
        <tr>
            <td>
                <div class="form-group">
                    @Html.ActionLink("Gratuity :", "Index", "home", new { gratuityview = true }, null)
            </div>
                    </td>
        </tr>
        <tr>
            <td>
                @Html.ActionLink("Medical Insurance :", "Index", "home", new { insuranceview = true }, null)
            </td>
        </tr>
    </table>
    @*<div id="employeeColumnChart"></div>*@
}

