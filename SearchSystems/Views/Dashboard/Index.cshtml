@model SearchSystems.ViewModels.EmployeeDashboardVM

@{
    ViewBag.Title = "Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm())
{
    <script type="text/javascript" src="https://www.google.com/jsapi"></script>


    <script>
        $(document).ready(function () {
            //Load Data Here
            var chartData = null;
            $.ajax({
                url: '/Dashboard/GetEmployeeJoiningData',
                type: 'GET',
                dataType: 'json',
                data: '',
                success: function (d) {
                    chartData = d;
                },
                error: function () {
                    alert('Error!');
                }
            }).done(function () {
                drawColumnChart(chartData);
            });
        });
        function drawColumnChart(d) {
            var chartData = d;
            var data = null;
            data = google.visualization.arrayToDataTable(chartData);
            var view = new google.visualization.DataView(data);
            view.setColumns([0, {
                type: 'number',
                label: data.getColumnLabel(0),
                calc: function () { return 0; }
            }
            ]);
            var chart = new google.visualization.ColumnChart($('#employeeColumnChart')[0]); //returns a HTML DOM Object
            var options = {
                title: 'Employee Joining Report',
                legend: 'none',
                colors: ['blue', '#009900'],

                hAxis: {
                    title: 'Year',
                    format: '#',
                    viewWindow: {
                        min: 1980,
                        max: 2500
                    }
                },
                vAxis: {
                    minValue: 0,
                    maxValue: 100,
                    title: 'EmployeesJoined'
                },
                chartArea: {
                    left: 100, top: 50, width: '70%', height: '50%'
                },
                animation: {
                    duration: 1000
                },
            };
            var runFirstTime = google.visualization.events.addListener(chart, 'ready', function () {
                google.visualization.events.removeListener(runFirstTime);
                chart.draw(data, options);
            });
            chart.draw(data, options);
        }
        google.load('visualization', '1', { packages: ['corechart'] });
    </script>

    <div class="row">
        <div class="col-md-1"></div>
        <div class="col-md-1"></div>
        <div class="col-md-1"></div>
        <div class="col-md-1"></div>
        <div class="col-md-1"></div>
        <div class="col-md-1"></div>
        <div class="col-md-1"></div>
        <div class="col-md-1"></div>
        <div class="col-md-1"></div>
        <div class="col-md-1"></div>
        <div class="col-md-1"></div>
        <div class="col-md-1"></div>
    </div>

    <h2 style="color:lightseagreen">@Html.Label("SEARCH Overview")</h2>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <h3>
                @Html.Label("Total Employees : ")<text>&nbsp;</text>@Html.ActionLink(Model.TotalEmployeesNumber.ToString(), "Index", "home")
            </h3>
        </div>
        <div class="col-md-4">
            <h3>
                @Html.Label("Male : ")<text>&nbsp;</text>@Html.ActionLink(Model.TotalMaleEmployeesNumber.ToString(), "Index", "home")
            </h3>
        </div>
        <div class="col-md-4">
            <h3>
                @Html.Label("Female : ")<text>&nbsp;</text>@Html.ActionLink(Model.TotalFemaleEmployeesNumber.ToString(), "Index", "home")
            </h3>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <h3>
                @Html.Label("Past Employees : ")<text>&nbsp;</text>@Html.ActionLink(Model.PastEmployees.ToString(), "Index", "home", new { deletedEmployeesView = true }, null)
            </h3>
        </div>
    </div>
    <hr/>
    <h2 style="color:lightseagreen">@Html.Label("Pending Dues : Need to take Action")</h2>

    <div class="row">
        <div class="col-md-4">
            <h3>
                @Html.Label("Provident Fund (PF) : ")<text>&nbsp;</text>@Html.ActionLink(Model.TotalEmpNumberPFTostartFor.ToString(), "Index", "home", new { pfview = true }, null)
            </h3>
        </div>
        <div class="col-md-4">
            <h3>
                @Html.Label("Gratuity : ")<text>&nbsp;</text>@Html.ActionLink(Model.TotalEmpGratuityPending.ToString(), "Index", "home", new { gratuityview = true }, null)
            </h3>
        </div>
        <div class="col-md-4">
            <h3>
                @Html.ActionLink("Medical Insurance", "Index", "home", new { insuranceview = true }, new { style = "color:black;font-weight:bold" })
            </h3>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <h3>
                @Html.Label("Fixed Deposits : ")<text>&nbsp;</text>@Html.ActionLink(Model.TotalFDMaturing.ToString(), "Index", "FixedDeposits", new { fdview = true }, null)
            </h3>
        </div>
        <div class="col-md-4">
            <h3>
                @Html.Label("Closed FD's : ")<text>&nbsp;</text>@Html.ActionLink(Model.TotalClosedFD.ToString(), "Index", "FixedDeposits", new { ClosedFDView = true }, null)
            </h3>
        </div>
    </div>
    <hr />

    <div class="row">
        <div class="col-md-4">
            <h4 style="color:#b24735">@Html.Label("Employee Service Distribution")</h4>
            <table border="1" class="text-center" cellpadding="5">
                <tr style="color:#b24735">
                    <th>Service Duration Between</th>
                    <th>No Of Employees</th>
                </tr>
                <tr>
                    <td>0 to 1 year</td>
                    <td>@Model.EmployeeServiceDistribution[1]</td>
                </tr>
                <tr>
                    <td>1 to 2 years</td>
                    <td>@Model.EmployeeServiceDistribution[2]</td>
                </tr>
                <tr>
                    <td>2 to 3 years</td>
                    <td>@Model.EmployeeServiceDistribution[3]</td>
                </tr>
                <tr>
                    <td>3 to 5 years</td>
                    <td>@Model.EmployeeServiceDistribution[5]</td>
                </tr>
                <tr>
                    <td>5 to 7 years</td>
                    <td>@Model.EmployeeServiceDistribution[7]</td>
                </tr>
                <tr>
                    <td>7 to 9 years</td>
                    <td>@Model.EmployeeServiceDistribution[9]</td>
                </tr>
                <tr>
                    <td>9 to 11 years</td>
                    <td>@Model.EmployeeServiceDistribution[11]</td>
                </tr>
                <tr>
                    <td>11 to 13 years</td>
                    <td>@Model.EmployeeServiceDistribution[13]</td>
                </tr>
                <tr>
                    <td>13 to 15 years</td>
                    <td>@Model.EmployeeServiceDistribution[15]</td>
                </tr>
                <tr>
                    <td>Above 15 years</td>
                    <td>@Model.EmployeeServiceDistribution[16]</td>
                </tr>
            </table>
        </div>
        <div class="col-md-4">
            <h4 style="color:#b24735">@Html.Label("Departmentwise Distribution")</h4>
            <table border="1" class="text-center" cellpadding="5">
                <tr style="color:#b24735">
                    <th>Department</th>
                    <th>Total Employees</th>
                    <th>Total Salary</th>
                </tr>

                @foreach (var item in Model.DepartmentDistributions)
                {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TotalEmployees)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TotalSalary)
                </td>
            </tr>

                }

            </table>
        </div>
        <div class="col-md-4">
            <h4 style="color:#b24735">@Html.Label("Distribution of Employees Joined")</h4>
            <table border="1" class="text-center" cellpadding="5">
                <tr style="color:#b24735">
                    <th>Between Years</th>
                    <th>Total Employees</th>
                </tr>
                <tr>
                    <td>Before 1990</td>
                    <td>@Model.EmployeeYearwiseDistribution[5]</td>
                </tr>
                <tr>
                    <td>1991 to 1995</td>
                    <td>@Model.EmployeeYearwiseDistribution[6]</td>
                </tr>
                <tr>
                    <td>1996 to 2000</td>
                    <td>@Model.EmployeeYearwiseDistribution[7]</td>
                </tr>
                <tr>
                    <td>2001 to 2005</td>
                    <td>@Model.EmployeeYearwiseDistribution[1]</td>
                </tr>
                <tr>
                    <td>2006 to 2010</td>
                    <td>@Model.EmployeeYearwiseDistribution[2]</td>
                </tr>
                <tr>
                    <td>2011 to 2015</td>
                    <td>@Model.EmployeeYearwiseDistribution[3]</td>
                </tr>
                <tr>
                    <td>2016 to 2020</td>
                    <td>@Model.EmployeeYearwiseDistribution[4]</td>
                </tr>
            </table>
        </div>

    </div>
    <hr />

    <div class="row">
        <div class="col-md-4">
            <h4 style="color:#b24735">@Html.Label("Blood Groupwise Distribution")</h4>
            <table border="1" class="text-center" cellpadding="5">
                <tr style="color:#b24735">
                    <th>Blood Group</th>
                    <th>Total Employees</th>
                </tr>
                @foreach (var item in Model.BloodGroups)
                {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Key)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Value)
                </td>
            </tr>

                }

            </table>
        </div>
        
            <div class="col-md-4">
                <h4 style="color:#b24735">@Html.Label("Upcoming Birthdays")</h4>
                <table border="1" class="text-center" cellpadding="5">
                    @if (Model.EmployeeBirthdays.Count() > 0)
                    {
            <tr style="color:#b24735">
                <th>Name</th>
                <th>Birthday</th>
            </tr>

                        foreach (var item in Model.EmployeeBirthdays)
                        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Key)
                </td>
                <td>
                    @Html.TextBox("birthday", item.Value.Value.ToShortDateString(), new { @readonly = "readonly", @style = "border: 0px" })
                </td>
            </tr>

                        }
                    }
                    else
                    { @Html.Label("No Birthdays in the coming month!")

                    }

                </table>
            </div>
        </div>
}


